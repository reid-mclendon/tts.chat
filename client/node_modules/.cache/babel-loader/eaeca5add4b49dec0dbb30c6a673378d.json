{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport socket from '../socket';\nlet synth = window.speechSynthesis;\nlet utterance = new SpeechSynthesisUtterance('');\n\nconst Speaker = () => {\n  _s();\n\n  useEffect(() => {\n    socket.on('msg', data => {\n      // tell the client to speak a message with specified pitch and rate\n      utterance = new SpeechSynthesisUtterance(data.text);\n      synth.speak(utterance);\n      console.log(data.text);\n    });\n    return () => {\n      socket.off('msg');\n    };\n  });\n  return null;\n};\n\n_s(Speaker, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Speaker;\nexport default Speaker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Speaker\");","map":{"version":3,"sources":["C:/Users/grumb/Documents/aloud/client/src/components/Speaker.jsx"],"names":["React","useEffect","socket","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","Speaker","on","data","text","speak","console","log","off"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,IAAIC,KAAK,GAAGC,MAAM,CAACC,eAAnB;AACA,IAAIC,SAAS,GAAG,IAAIC,wBAAJ,CAA6B,EAA7B,CAAhB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClBP,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,MAAM,CAACO,EAAP,CAAU,KAAV,EAAiBC,IAAI,IAAI;AAAE;AACvBJ,MAAAA,SAAS,GAAG,IAAIC,wBAAJ,CAA6BG,IAAI,CAACC,IAAlC,CAAZ;AACAR,MAAAA,KAAK,CAACS,KAAN,CAAYN,SAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACC,IAAjB;AACH,KAJD;AAMA,WAAO,MAAM;AACTT,MAAAA,MAAM,CAACa,GAAP,CAAW,KAAX;AACH,KAFD;AAGH,GAVQ,CAAT;AAYA,SAAQ,IAAR;AACH,CAdD;;GAAMP,O;;KAAAA,O;AAgBN,eAAeA,OAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport socket from '../socket';\r\nlet synth = window.speechSynthesis;\r\nlet utterance = new SpeechSynthesisUtterance('');\r\n\r\nconst Speaker = () => {\r\n    useEffect(() => {\r\n        socket.on('msg', data => { // tell the client to speak a message with specified pitch and rate\r\n            utterance = new SpeechSynthesisUtterance(data.text);\r\n            synth.speak(utterance);\r\n            console.log(data.text);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('msg');\r\n        };\r\n    });\r\n\r\n    return (null);\r\n}\r\n\r\nexport default Speaker;"]},"metadata":{},"sourceType":"module"}