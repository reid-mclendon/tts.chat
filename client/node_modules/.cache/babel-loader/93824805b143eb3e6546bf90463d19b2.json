{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grumb\\\\Documents\\\\aloud\\\\client\\\\src\\\\components\\\\Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useImperativeHandle } from 'react';\nimport styled from '@emotion/styled';\nimport socket from '../adapters/socket';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = ['#FFDEAA', '#FFCAA3', '#FFD9AE', '#FFB59B', '#FFA194', '#FF8C8C'];\nconst Wrapper = styled.div`\nposition: fixed;\ndisplay: flex;\nz-index:100;\nwidth:100%;\nheight:100%;\nbackground: white;\nalign-items: center;\njustify-content: center;\n`;\n_c = Wrapper;\nconst Red = styled.span`\n    color:#FF331F;\n`;\n_c2 = Red;\nconst Box = styled.div`\ndisplay: grid;\ngrid-template-columns: repeat(1, 1fr);\ngrid-auto-rows: minmax(1vh, auto);\nposition: -webkit-sticky;\nposition: sticky;\nborder-radius: .5em;\nheight: 25%;\npadding: 2em;\n`;\n_c3 = Box;\nconst Big = styled.span`\nfont-family: 'Monosten';\nfont-weight: 300;\nmargin: 0;\n`;\n_c4 = Big;\nconst BigWrapper = styled.div`\ndisplay:flex;\njustify-content: center;\nalign-items: start;\nheight: 75vh;\n`;\n_c5 = BigWrapper;\nconst InputWrapper = styled.div`\ndisplay:flex;\njustify-content: center;\n`;\n_c6 = InputWrapper;\nconst StyledInput = styled.input`\nborder-radius: 100em;\nbox-sizing: border-box;\n/* border: 1px solid black; */\nfont-family: 'Monosten';\ncolor: #b7b7b7;\nbackground-color: #f2f3f5;\nborder: none;\nheight: 1vh;\nwidth: 75%;\npadding: 1.25em 2em 1.25em 2em;\noutline: none;\n&:focus {\n    color: #303030;\n}`;\n_c7 = StyledInput;\n\nconst Card = ({\n  synth\n}) => {\n  _s();\n\n  const [userName, setName] = useState('');\n  const [hidden, SetHidden] = useState(false);\n  let newColor = colors[Math.floor(Math.random() * colors.length)];\n\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      console.log(userName);\n      let user = {\n        id: socket.id,\n        name: userName,\n        color: newColor\n      };\n      socket.emit('newUser', user);\n      console.log(user);\n      let ut = new SpeechSynthesisUtterance(`Welcome to the chat`);\n      synth.speak(ut);\n      SetHidden(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: hidden ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(BigWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Big, {\n            children: [\"Welcome to \", /*#__PURE__*/_jsxDEV(Red, {\n              children: \"aloud\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 45\n            }, this), \", the text-to-speech chatroom.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n          children: /*#__PURE__*/_jsxDEV(StyledInput, {\n            autoComplete: \"off\",\n            type: \"text\",\n            value: userName,\n            onChange: e => setName(e.target.value),\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(Card, \"skOFhUt1UOQjhSVAjB7w3Rw1Zwg=\");\n\n_c8 = Card;\nexport default Card;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Red\");\n$RefreshReg$(_c3, \"Box\");\n$RefreshReg$(_c4, \"Big\");\n$RefreshReg$(_c5, \"BigWrapper\");\n$RefreshReg$(_c6, \"InputWrapper\");\n$RefreshReg$(_c7, \"StyledInput\");\n$RefreshReg$(_c8, \"Card\");","map":{"version":3,"sources":["C:/Users/grumb/Documents/aloud/client/src/components/Card.jsx"],"names":["React","useState","useEffect","useImperativeHandle","styled","socket","colors","Wrapper","div","Red","span","Box","Big","BigWrapper","InputWrapper","StyledInput","input","Card","synth","userName","setName","hidden","SetHidden","newColor","Math","floor","random","length","handleKeyPress","e","key","console","log","user","id","name","color","emit","ut","SpeechSynthesisUtterance","speak","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useImperativeHandle} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport socket from '../adapters/socket';\r\n\r\nconst colors = ['#FFDEAA', '#FFCAA3', '#FFD9AE', '#FFB59B', '#FFA194', '#FF8C8C'];\r\n\r\nconst Wrapper = styled.div`\r\nposition: fixed;\r\ndisplay: flex;\r\nz-index:100;\r\nwidth:100%;\r\nheight:100%;\r\nbackground: white;\r\nalign-items: center;\r\njustify-content: center;\r\n`\r\nconst Red = styled.span`\r\n    color:#FF331F;\r\n`\r\n\r\nconst Box = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: repeat(1, 1fr);\r\ngrid-auto-rows: minmax(1vh, auto);\r\nposition: -webkit-sticky;\r\nposition: sticky;\r\nborder-radius: .5em;\r\nheight: 25%;\r\npadding: 2em;\r\n`\r\nconst Big = styled.span`\r\nfont-family: 'Monosten';\r\nfont-weight: 300;\r\nmargin: 0;\r\n`\r\n\r\nconst BigWrapper = styled.div`\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: start;\r\nheight: 75vh;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\ndisplay:flex;\r\njustify-content: center;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\nborder-radius: 100em;\r\nbox-sizing: border-box;\r\n/* border: 1px solid black; */\r\nfont-family: 'Monosten';\r\ncolor: #b7b7b7;\r\nbackground-color: #f2f3f5;\r\nborder: none;\r\nheight: 1vh;\r\nwidth: 75%;\r\npadding: 1.25em 2em 1.25em 2em;\r\noutline: none;\r\n&:focus {\r\n    color: #303030;\r\n}`\r\n\r\nconst Card = ({synth}) => {\r\n    const [userName, setName] = useState('');\r\n    const [hidden, SetHidden] = useState(false);\r\n    let newColor = colors[Math.floor(Math.random()*colors.length)];\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter'){\r\n            console.log(userName);\r\n            let user = {id: socket.id, name: userName, color: newColor}\r\n            socket.emit('newUser', user);\r\n            console.log(user);\r\n            let ut = new SpeechSynthesisUtterance(`Welcome to the chat`);\r\n            synth.speak(ut);\r\n            SetHidden(true);\r\n        }       \r\n    }\r\n\r\n    return(\r\n    <>\r\n        {hidden \r\n        ? <></> \r\n        : <Wrapper>\r\n            <Box>\r\n                <BigWrapper><Big>Welcome to <Red>aloud</Red>, the text-to-speech chatroom.</Big></BigWrapper>\r\n                <InputWrapper><StyledInput autoComplete=\"off\"  type=\"text\"  value={userName} onChange={(e) => setName(e.target.value)} onKeyPress={handleKeyPress}/></InputWrapper>\r\n            </Box>\r\n        </Wrapper> \r\n        }\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}