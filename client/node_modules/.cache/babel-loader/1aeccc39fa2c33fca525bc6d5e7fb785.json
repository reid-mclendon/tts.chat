{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grumb\\\\Documents\\\\aloud\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport styled from '@emotion/styled';\nimport Card from './components/Card';\nimport { useEffect } from 'react';\nimport ChatInput from './components/ChatInput';\nimport Logo from './components/Logo';\nimport Info from './components/Info';\nimport socket from './adapters/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\ndisplay: grid;\ngrid-template-columns: repeat(1, 1fr);\ngrid-auto-rows: minmax(1vh, auto);\n`;\n_c = Wrapper;\nlet synth = window.speechSynthesis;\nlet utterance;\n/*\n  socket.on('speak', data => { // tell the client to speak a message with specified pitch and rate\n      console.log(data.text);\n  });\n    \n    return () => {\n        socket.off('speak');\n    };\n*/\n\nconst App = () => {\n  _s();\n\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log('connected');\n      setConnected(true);\n    });\n\n    if (connected) {\n      socket.on('speak', data => {\n        // tell the client to speak a message with specified pitch and rate\n        console.log(data.text);\n      });\n      return () => {\n        socket.off('speak');\n      };\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      synth: synth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"NFlTEg7F86aU6mjdNH+dIO8IVKM=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/grumb/Documents/aloud/client/src/App.js"],"names":["styled","Card","useEffect","ChatInput","Logo","Info","socket","Wrapper","div","synth","window","speechSynthesis","utterance","App","connected","setConnected","useState","on","console","log","data","text","off"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AACA,MAAMC,OAAO,GAAGP,MAAM,CAACQ,GAAI;AAC3B;AACA;AACA;AACA,CAJA;KAAMD,O;AAMN,IAAIE,KAAK,GAAGC,MAAM,CAACC,eAAnB;AACA,IAAIC,SAAJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,KAAD,CAA1C;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,MAAM,CAACW,EAAP,CAAU,SAAV,EAAqB,MAAM;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,KAHD;;AAKA,QAAID,SAAJ,EAAc;AACZR,MAAAA,MAAM,CAACW,EAAP,CAAU,OAAV,EAAmBG,IAAI,IAAI;AAAE;AAC3BF,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,IAAjB;AACH,OAFC;AAIA,aAAO,MAAM;AACTf,QAAAA,MAAM,CAACgB,GAAP,CAAW,OAAX;AACH,OAFD;AAGD;AACJ,GAfQ,CAAT;AAiBA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEb;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3BD;;GAAMI,G;;MAAAA,G;AA6BN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport styled from '@emotion/styled';\nimport Card from './components/Card';\nimport {useEffect} from 'react';\nimport ChatInput from './components/ChatInput';\nimport Logo from './components/Logo';\nimport Info from './components/Info';\nimport socket from './adapters/socket';\nconst Wrapper = styled.div`\ndisplay: grid;\ngrid-template-columns: repeat(1, 1fr);\ngrid-auto-rows: minmax(1vh, auto);\n`\n\nlet synth = window.speechSynthesis;\nlet utterance;\n\n/*\n  socket.on('speak', data => { // tell the client to speak a message with specified pitch and rate\n      console.log(data.text);\n  });\n    \n    return () => {\n        socket.off('speak');\n    };\n*/\n\nconst App = () => {\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n      socket.on(\"connect\", () => {\n          console.log('connected');\n          setConnected(true);\n      })\n\n      if (connected){\n        socket.on('speak', data => { // tell the client to speak a message with specified pitch and rate\n          console.log(data.text);\n      });\n        \n        return () => {\n            socket.off('speak');\n        };\n      }     \n  });\n  \n  return (\n    <Wrapper>\n      <Logo />\n      <ChatInput synth={synth}/>\n      <Info />\n    </Wrapper>    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}