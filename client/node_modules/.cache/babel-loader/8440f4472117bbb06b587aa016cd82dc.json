{"ast":null,"code":"import _slicedToArray from\"C:/Users/grumb/Documents/tts.chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/grumb/Documents/tts.chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useState,useEffect}from'react';import styled from'@emotion/styled';import socket from'../adapters/socket';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\ndisplay:flex;\\njustify-content: center;\\nalign-items: center;\\nheight: 25vh;\\ngrid-row: 2;\\n\"])));var StyledInput=styled.input(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\nborder-radius: 100em;\\nbox-sizing: border-box;\\nfont-family: 'Monosten';\\ncolor: #b7b7b7;\\nbackground-color: #f2f3f5;\\nborder: none;\\nwidth: 75%;\\npadding: 1em 2em 1em 2em;\\noutline: none;\\ntransition-duration: .3s;\\n&:focus {\\n    color: #303030;\\n}\\n\\n&:hover:not(:focus) {\\n    background-color: #eeeff2;\\n    color: #a5a5a5;\\n}\\n@media (min-width: 768px) {\\n   width: 50%;\\n}\\n\\n@media (min-width: 1024px) {\\n   width: 33%;\\n}   \\n\"])));var Chat=function Chat(){// Set defaultText and initial state\nvar user;var defaultText='Enter your name to join';var _useState=useState(''),_useState2=_slicedToArray(_useState,2),userName=_useState2[0],setName=_useState2[1];var _useState3=useState(defaultText),_useState4=_slicedToArray(_useState3,2),inputText=_useState4[0],setInputText=_useState4[1];var _useState5=useState(8),_useState6=_slicedToArray(_useState5,2),charLimit=_useState6[0],setCharLimit=_useState6[1];// On submit: \nvar handleSubmit=function handleSubmit(e){e.preventDefault();e.target.blur();if(userName===''){// If we don't have a userName, \nuser={id:socket.id,name:inputText};socket.emit('newUser',user);setName(inputText);setCharLimit(32);setInputText('');}else{socket.emit('msg',inputText);setInputText('');}};useEffect(function(){socket.on('speak',function(text){var utterance=new SpeechSynthesisUtterance(text);var synth=window.speechSynthesis;synth.speak(utterance);});return function(){socket.off('speak');};});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsx(\"form\",{style:{width:'100%',display:'flex',justifyContent:'center'},onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(StyledInput,{maxLength:charLimit,autoComplete:\"off\",type:\"text\",name:\"name\",onFocus:function onFocus(e){return setInputText('');},onBlur:function onBlur(e){userName===''?setInputText(defaultText):setInputText('Say something...');},value:inputText,onChange:function onChange(e){return setInputText(e.target.value);}})})})});};export default Chat;","map":{"version":3,"sources":["C:/Users/grumb/Documents/tts.chat/client/src/components/Chat.jsx"],"names":["React","useState","useEffect","styled","socket","Wrapper","div","StyledInput","input","Chat","user","defaultText","userName","setName","inputText","setInputText","charLimit","setCharLimit","handleSubmit","e","preventDefault","target","blur","id","name","emit","on","text","utterance","SpeechSynthesisUtterance","synth","window","speechSynthesis","speak","off","width","display","justifyContent","value"],"mappings":"mXAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,C,gGAEA,GAAMC,CAAAA,OAAO,CAAGF,MAAM,CAACG,GAAV,+JAAb,CAQA,GAAMC,CAAAA,WAAW,CAAGJ,MAAM,CAACK,KAAV,wfAAjB,CA4BA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACf;AACA,GAAIC,CAAAA,IAAJ,CACA,GAAMC,CAAAA,WAAW,CAAG,yBAApB,CAHe,cAIaV,QAAQ,CAAC,EAAD,CAJrB,wCAIRW,QAJQ,eAIEC,OAJF,8BAKmBZ,QAAQ,CAACU,WAAD,CAL3B,yCAKRG,SALQ,eAKGC,YALH,8BAMmBd,QAAQ,CAAC,CAAD,CAN3B,yCAMRe,SANQ,eAMGC,YANH,eAQf;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxBA,CAAC,CAACC,cAAF,GACAD,CAAC,CAACE,MAAF,CAASC,IAAT,GACA,GAAIV,QAAQ,GAAK,EAAjB,CAAqB,CAAE;AACnBF,IAAI,CAAG,CAACa,EAAE,CAAEnB,MAAM,CAACmB,EAAZ,CAAgBC,IAAI,CAAEV,SAAtB,CAAP,CACAV,MAAM,CAACqB,IAAP,CAAY,SAAZ,CAAuBf,IAAvB,EACAG,OAAO,CAACC,SAAD,CAAP,CACAG,YAAY,CAAC,EAAD,CAAZ,CACAF,YAAY,CAAC,EAAD,CAAZ,CACH,CAND,IAQK,CACDX,MAAM,CAACqB,IAAP,CAAY,KAAZ,CAAmBX,SAAnB,EACAC,YAAY,CAAC,EAAD,CAAZ,CACH,CACJ,CAfD,CAiBAb,SAAS,CAAC,UAAM,CACZE,MAAM,CAACsB,EAAP,CAAU,OAAV,CAAmB,SAAAC,IAAI,CAAI,CACnB,GAAIC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,wBAAJ,CAA6BF,IAA7B,CAAhB,CACA,GAAIG,CAAAA,KAAK,CAAGC,MAAM,CAACC,eAAnB,CACAF,KAAK,CAACG,KAAN,CAAYL,SAAZ,EACL,CAJH,EAME,MAAQ,WAAM,CACVxB,MAAM,CAAC8B,GAAP,CAAW,OAAX,EACH,CAFD,CAGL,CAVQ,CAAT,CAaA,mBACA,sCACA,KAAC,OAAD,wBACA,aAAM,KAAK,CAAE,CAAEC,KAAK,CAAC,MAAR,CAAgBC,OAAO,CAAC,MAAxB,CAAgCC,cAAc,CAAC,QAA/C,CAAb,CAAwE,QAAQ,CAAEnB,YAAlF,uBACI,KAAC,WAAD,EAAa,SAAS,CAAEF,SAAxB,CAAmC,YAAY,CAAC,KAAhD,CAAuD,IAAI,CAAC,MAA5D,CAAmE,IAAI,CAAC,MAAxE,CAA+E,OAAO,CAAE,iBAACG,CAAD,QAAOJ,CAAAA,YAAY,CAAC,EAAD,CAAnB,EAAxF,CACC,MAAM,CAAE,gBAACI,CAAD,CAAO,CAAEP,QAAQ,GAAK,EAAb,CAAkBG,YAAY,CAACJ,WAAD,CAA9B,CAA8CI,YAAY,CAAC,kBAAD,CAA1D,CAAiF,CADnG,CAEE,KAAK,CAAED,SAFT,CAEoB,QAAQ,CAAE,kBAACK,CAAD,QAAOJ,CAAAA,YAAY,CAACI,CAAC,CAACE,MAAF,CAASiB,KAAV,CAAnB,EAF9B,EADJ,EADA,EADA,EADA,CAYH,CAnDD,CAqDA,cAAe7B,CAAAA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport socket from '../adapters/socket';\r\n\r\nconst Wrapper = styled.div`\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: center;\r\nheight: 25vh;\r\ngrid-row: 2;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\nborder-radius: 100em;\r\nbox-sizing: border-box;\r\nfont-family: 'Monosten';\r\ncolor: #b7b7b7;\r\nbackground-color: #f2f3f5;\r\nborder: none;\r\nwidth: 75%;\r\npadding: 1em 2em 1em 2em;\r\noutline: none;\r\ntransition-duration: .3s;\r\n&:focus {\r\n    color: #303030;\r\n}\r\n\r\n&:hover:not(:focus) {\r\n    background-color: #eeeff2;\r\n    color: #a5a5a5;\r\n}\r\n@media (min-width: 768px) {\r\n   width: 50%;\r\n}\r\n\r\n@media (min-width: 1024px) {\r\n   width: 33%;\r\n}   \r\n`\r\n\r\nconst Chat = () => {\r\n    // Set defaultText and initial state\r\n    let user;\r\n    const defaultText = 'Enter your name to join';\r\n    const [userName, setName] = useState('');\r\n    const [inputText, setInputText] = useState(defaultText);\r\n    const [charLimit, setCharLimit] = useState(8);\r\n    \r\n    // On submit: \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.target.blur();\r\n        if (userName === '') { // If we don't have a userName, \r\n            user = {id: socket.id, name: inputText}\r\n            socket.emit('newUser', user);\r\n            setName(inputText);\r\n            setCharLimit(32);\r\n            setInputText('');\r\n        }\r\n\r\n        else {\r\n            socket.emit('msg', inputText); \r\n            setInputText('');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('speak', text => {\r\n                let utterance = new SpeechSynthesisUtterance(text);\r\n                let synth = window.speechSynthesis;\r\n                synth.speak(utterance);\r\n          });\r\n\r\n          return (() => {\r\n              socket.off('speak');\r\n          })\r\n    });\r\n\r\n\r\n    return (\r\n    <>\r\n    <Wrapper>\r\n    <form style={{ width:'100%', display:'flex', justifyContent:'center' }} onSubmit={handleSubmit}>\r\n        <StyledInput maxLength={charLimit} autoComplete=\"off\"  type=\"text\" name=\"name\" onFocus={(e) => setInputText('')}\r\n         onBlur={(e) => { userName === '' ? setInputText(defaultText) : setInputText('Say something...'); }}\r\n          value={inputText} onChange={(e) => setInputText(e.target.value)}>\r\n        </StyledInput>\r\n    </form>\r\n    </Wrapper> \r\n    </>\r\n    )\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}