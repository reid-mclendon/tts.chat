{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport socket from '../adapters/socket';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Speaker = () => {\n  _s();\n\n  useEffect(() => {\n    let synth = window.speechSynthesis;\n    let voices = speechSynthesis.getVoices();\n    let utterance;\n    socket.on('msg', data => {\n      // tell the client to speak a message with specified pitch and rate\n      utterance = new SpeechSynthesisUtterance(data.text);\n      utterance.voice = voices[2];\n      synth.speak(utterance);\n      console.log(data.text);\n    });\n    return () => {\n      socket.off('msg');\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Speaker, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Speaker;\nexport default Speaker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Speaker\");","map":{"version":3,"sources":["C:/Users/grumb/Documents/aloud/client/src/components/Speaker.jsx"],"names":["React","useEffect","socket","Speaker","synth","window","speechSynthesis","voices","getVoices","utterance","on","data","SpeechSynthesisUtterance","text","voice","speak","console","log","off"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACdF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,KAAK,GAAGC,MAAM,CAACC,eAAnB;AAEA,QAAIC,MAAM,GAAGD,eAAe,CAACE,SAAhB,EAAb;AAEA,QAAIC,SAAJ;AACIP,IAAAA,MAAM,CAACQ,EAAP,CAAU,KAAV,EAAiBC,IAAI,IAAI;AAAE;AAC3BF,MAAAA,SAAS,GAAG,IAAIG,wBAAJ,CAA6BD,IAAI,CAACE,IAAlC,CAAZ;AACAJ,MAAAA,SAAS,CAACK,KAAV,GAAkBP,MAAM,CAAC,CAAD,CAAxB;AACAH,MAAAA,KAAK,CAACW,KAAN,CAAYN,SAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACE,IAAjB;AACH,KALG;AAMR,WAAO,MAAM;AACTX,MAAAA,MAAM,CAACgB,GAAP,CAAW,KAAX;AACH,KAFD;AAGH,GAfY,CAAT;AAiBJ,sBAAQ,qCAAR;AACH,CAnBD;;GAAMf,O;;KAAAA,O;AAqBN,eAAeA,OAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport socket from '../adapters/socket';\r\n\r\nconst Speaker = () => {\r\n        useEffect(() => {\r\n            let synth = window.speechSynthesis;\r\n\r\n            let voices = speechSynthesis.getVoices();\r\n\r\n            let utterance;\r\n                socket.on('msg', data => { // tell the client to speak a message with specified pitch and rate\r\n                utterance = new SpeechSynthesisUtterance(data.text);\r\n                utterance.voice = voices[2];\r\n                synth.speak(utterance);\r\n                console.log(data.text);   \r\n            });\r\n        return () => {\r\n            socket.off('msg');\r\n        };\r\n    });\r\n\r\n    return (<></>);\r\n}\r\n\r\nexport default Speaker;"]},"metadata":{},"sourceType":"module"}