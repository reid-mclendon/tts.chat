{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grumb\\\\Documents\\\\aloud\\\\client\\\\src\\\\components\\\\ChatInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Speaker from './Speaker';\nimport styled from '@emotion/styled';\nimport socket from '../adapters/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet utterance;\nconst Wrapper = styled.div`\ndisplay:flex;\njustify-content: center;\nalign-items: center;\nheight: 25vh;\ngrid-row: 2;\n`;\n_c = Wrapper;\nconst Wrapper2 = styled.div`\ndisplay:flex;\njustify-content: center;\nalign-items: center;\nheight: 25vh;\ngrid-row: 3;\n`;\nconst StyledInput = styled.input`\nborder-radius: 100em;\nbox-sizing: border-box;\nfont-family: 'Monosten';\ncolor: #b7b7b7;\nbackground-color: #f2f3f5;\nborder: none;\nheight: 2vh;\nwidth: 75%;\npadding: 1.5em 2em 1.5em 2em;\noutline: none;\n&:focus {\n    color: #303030;\n}\n@media (min-width: 1024px) {\n   width: 50%;\n}\n`;\n_c2 = StyledInput;\nconst Slider = styled.input`\nwidth: 25%;\n`;\n\nconst ChatInput = ({\n  synth\n}) => {\n  _s();\n\n  // I thought it was an issue with Chrome but its most likely an issue with React\n  const [userName, setName] = useState('');\n  const [inputText, setInputText] = useState('Say something...');\n  const [pitch, setPitch] = useState(1);\n  const [rate, setRate] = useState(1);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (userName === '') {\n      let user = {\n        id: socket.id,\n        name: inputText\n      };\n      socket.emit('newUser', user);\n      let data = {\n        text: `${userName} has joined the chat`,\n        pitch: 1,\n        rate: 1\n      };\n      socket.emit('msg', data);\n      console.log(user);\n      setName(inputText);\n    } else {\n      let data = {\n        text: inputText,\n        pitch: pitch,\n        rate: rate\n      };\n      socket.emit('msg', data); // send server our message, the pitch, and the rate\n\n      setInputText('');\n    }\n  };\n\n  useEffect(() => {\n    console.log('component mounted');\n    socket.on('msg', data => {\n      // tell the client to speak a message with specified pitch and rate\n      console.log(data.text);\n    });\n    return () => {\n      console.log('component unmounted');\n      socket.off('msg');\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(StyledInput, {\n          maxLength: \"32\",\n          autoComplete: \"off\",\n          type: \"text\",\n          name: \"name\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChatInput, \"lKmATv/6cVHi2D+HRP8F1dChPH0=\");\n\n_c3 = ChatInput;\nexport default ChatInput;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"ChatInput\");","map":{"version":3,"sources":["C:/Users/grumb/Documents/aloud/client/src/components/ChatInput.jsx"],"names":["React","useState","useEffect","Speaker","styled","socket","utterance","Wrapper","div","Wrapper2","StyledInput","input","Slider","ChatInput","synth","userName","setName","inputText","setInputText","pitch","setPitch","rate","setRate","handleSubmit","e","preventDefault","user","id","name","emit","data","text","console","log","on","off","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Speaker from './Speaker';\r\nimport styled from '@emotion/styled';\r\nimport socket from '../adapters/socket';\r\n\r\nlet utterance;\r\n\r\nconst Wrapper = styled.div`\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: center;\r\nheight: 25vh;\r\ngrid-row: 2;\r\n`\r\n\r\nconst Wrapper2 = styled.div`\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: center;\r\nheight: 25vh;\r\ngrid-row: 3;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\nborder-radius: 100em;\r\nbox-sizing: border-box;\r\nfont-family: 'Monosten';\r\ncolor: #b7b7b7;\r\nbackground-color: #f2f3f5;\r\nborder: none;\r\nheight: 2vh;\r\nwidth: 75%;\r\npadding: 1.5em 2em 1.5em 2em;\r\noutline: none;\r\n&:focus {\r\n    color: #303030;\r\n}\r\n@media (min-width: 1024px) {\r\n   width: 50%;\r\n}\r\n`\r\n\r\nconst Slider = styled.input`\r\nwidth: 25%;\r\n`\r\n\r\nconst ChatInput = ({synth}) => {\r\n\r\n    // I thought it was an issue with Chrome but its most likely an issue with React\r\n    const [userName, setName] = useState('');\r\n    const [inputText, setInputText] = useState('Say something...');\r\n    const [pitch, setPitch] = useState(1);\r\n    const [rate, setRate] = useState(1);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (userName === '') {\r\n            let user = {id: socket.id, name: inputText}\r\n            socket.emit('newUser', user);\r\n            let data = {text: `${userName} has joined the chat`, pitch: 1, rate: 1}\r\n            socket.emit('msg', data);\r\n            console.log(user);\r\n            setName(inputText);\r\n        }\r\n\r\n        else {\r\n            let data = {\r\n            text: inputText,\r\n            pitch: pitch,\r\n            rate: rate\r\n            }\r\n            socket.emit('msg', data); // send server our message, the pitch, and the rate\r\n            setInputText('');\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('component mounted');\r\n            socket.on('msg', data => { // tell the client to speak a message with specified pitch and rate\r\n                console.log(data.text);\r\n                  \r\n            });\r\n            \r\n            return () => {\r\n                console.log('component unmounted');\r\n                socket.off('msg')\r\n            };\r\n    }, [socket]);\r\n\r\n    return (\r\n    <>\r\n    <Wrapper>\r\n    <form onSubmit={handleSubmit}>\r\n        <StyledInput maxLength=\"32\" autoComplete=\"off\"  type=\"text\" name=\"name\"\r\n        value={inputText} onChange={(e) => setInputText(e.target.value)}>\r\n        </StyledInput>\r\n    </form>\r\n    </Wrapper> \r\n    </>\r\n    )\r\n}\r\n\r\nexport default ChatInput;"]},"metadata":{},"sourceType":"module"}