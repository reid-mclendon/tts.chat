{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport socket from '../socket';\n\nconst Speaker = () => {\n  _s();\n\n  useEffect(() => {\n    socket.on('msg', data => {\n      // tell the client to speak a message with specified pitch and rate\n      let utterance = new SpeechSynthesisUtterance(data.text);\n      utterance.pitch = data.pitch;\n      utterance.rate = data.rate;\n      speechSynthesis.speak(utterance);\n      console.log(data.text);\n    });\n    return () => {\n      socket.off('msg');\n    };\n  });\n  return null;\n};\n\n_s(Speaker, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Speaker;\nexport default Speaker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Speaker\");","map":{"version":3,"sources":["C:/Users/grumb/Documents/aloud/client/src/components/Speaker.jsx"],"names":["React","useEffect","socket","Speaker","on","data","utterance","SpeechSynthesisUtterance","text","pitch","rate","speechSynthesis","speak","console","log","off"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClBF,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,MAAM,CAACE,EAAP,CAAU,KAAV,EAAiBC,IAAI,IAAI;AAAE;AACvB,UAAIC,SAAS,GAAG,IAAIC,wBAAJ,CAA6BF,IAAI,CAACG,IAAlC,CAAhB;AACAF,MAAAA,SAAS,CAACG,KAAV,GAAkBJ,IAAI,CAACI,KAAvB;AACAH,MAAAA,SAAS,CAACI,IAAV,GAAiBL,IAAI,CAACK,IAAtB;AACAC,MAAAA,eAAe,CAACC,KAAhB,CAAsBN,SAAtB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACG,IAAjB;AACH,KAND;AAQA,WAAO,MAAM;AACTN,MAAAA,MAAM,CAACa,GAAP,CAAW,KAAX;AACH,KAFD;AAGH,GAZQ,CAAT;AAcA,SAAO,IAAP;AACH,CAhBD;;GAAMZ,O;;KAAAA,O;AAkBN,eAAeA,OAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport socket from '../socket';\r\n\r\nconst Speaker = () => {\r\n    useEffect(() => {\r\n        socket.on('msg', data => { // tell the client to speak a message with specified pitch and rate\r\n            let utterance = new SpeechSynthesisUtterance(data.text);\r\n            utterance.pitch = data.pitch;\r\n            utterance.rate = data.rate;\r\n            speechSynthesis.speak(utterance);\r\n            console.log(data.text);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('msg');\r\n        };\r\n    });\r\n\r\n    return(null);\r\n}\r\n\r\nexport default Speaker;"]},"metadata":{},"sourceType":"module"}