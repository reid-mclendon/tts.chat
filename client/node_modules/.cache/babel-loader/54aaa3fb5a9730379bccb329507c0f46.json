{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grumb\\\\Documents\\\\aloud\\\\client\\\\src\\\\components\\\\ChatInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport socket from '../adapters/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\ndisplay:flex;\njustify-content: center;\nalign-items: center;\nheight: 25vh;\ngrid-row: 2;\n`;\n_c = Wrapper;\nconst Wrapper2 = styled.div`\ndisplay:flex;\njustify-content: center;\nalign-items: center;\nheight: 25vh;\ngrid-row: 3;\n`;\nconst StyledInput = styled.input`\nborder-radius: 100em;\nbox-sizing: border-box;\nfont-family: 'Monosten';\ncolor: #b7b7b7;\nbackground-color: #f2f3f5;\nborder: none;\nwidth: 100%;\npadding: 1.5em 2em 1.5em 2em;\noutline: none;\n&:focus {\n    color: #303030;\n}\n@media (min-width: 1024px) {\n   width: 50%;\n}\n`;\n_c2 = StyledInput;\nconst Slider = styled.input`\nwidth: 25%;\n`;\n\nconst ChatInput = ({\n  synth\n}) => {\n  _s();\n\n  useEffect(() => {\n    socket.on('speak', data => {\n      console.log(data.text);\n    });\n    return () => {};\n  });\n  let user;\n  let data; // I thought it was an issue with Chrome but its most likely an issue with React\n\n  const [userName, setName] = useState('');\n  const [inputText, setInputText] = useState('Say something...');\n  const [pitch, setPitch] = useState(1);\n  const [rate, setRate] = useState(1);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    e.target.blur();\n\n    if (userName === '') {\n      user = {\n        id: socket.id,\n        name: inputText\n      };\n      socket.emit('newUser', user);\n      console.log(user);\n      setName(inputText);\n    } else {\n      data = {\n        text: inputText,\n        pitch: pitch,\n        rate: rate\n      };\n      socket.emit('msg', data); // send server our message, the pitch, and the rate\n\n      setInputText('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(StyledInput, {\n          maxLength: \"32\",\n          autoComplete: \"off\",\n          type: \"text\",\n          name: \"name\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChatInput, \"xei18/Fcy2G0xqUGgyKWENCGrKE=\");\n\n_c3 = ChatInput;\nexport default ChatInput;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"ChatInput\");","map":{"version":3,"sources":["C:/Users/grumb/Documents/aloud/client/src/components/ChatInput.jsx"],"names":["React","useState","useEffect","styled","socket","Wrapper","div","Wrapper2","StyledInput","input","Slider","ChatInput","synth","on","data","console","log","text","user","userName","setName","inputText","setInputText","pitch","setPitch","rate","setRate","handleSubmit","e","preventDefault","target","blur","id","name","emit","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport socket from '../adapters/socket';\r\n\r\n\r\nconst Wrapper = styled.div`\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: center;\r\nheight: 25vh;\r\ngrid-row: 2;\r\n`\r\n\r\nconst Wrapper2 = styled.div`\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: center;\r\nheight: 25vh;\r\ngrid-row: 3;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\nborder-radius: 100em;\r\nbox-sizing: border-box;\r\nfont-family: 'Monosten';\r\ncolor: #b7b7b7;\r\nbackground-color: #f2f3f5;\r\nborder: none;\r\nwidth: 100%;\r\npadding: 1.5em 2em 1.5em 2em;\r\noutline: none;\r\n&:focus {\r\n    color: #303030;\r\n}\r\n@media (min-width: 1024px) {\r\n   width: 50%;\r\n}\r\n`\r\n\r\nconst Slider = styled.input`\r\nwidth: 25%;\r\n`\r\n\r\nconst ChatInput = ({synth}) => {\r\n    useEffect(() => {\r\n        socket.on('speak', data => {\r\n            console.log(data.text);\r\n          });\r\n\r\n          return (() => {\r\n          })\r\n\r\n    });\r\n\r\n    let user;\r\n    let data;\r\n    // I thought it was an issue with Chrome but its most likely an issue with React\r\n    const [userName, setName] = useState('');\r\n    const [inputText, setInputText] = useState('Say something...');\r\n    const [pitch, setPitch] = useState(1);\r\n    const [rate, setRate] = useState(1);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.target.blur();\r\n        if (userName === '') {\r\n            user = {id: socket.id, name: inputText}\r\n            socket.emit('newUser', user);\r\n            console.log(user);\r\n            setName(inputText);\r\n        }\r\n\r\n        else {\r\n            data = {\r\n            text: inputText,\r\n            pitch: pitch,\r\n            rate: rate\r\n            }\r\n            socket.emit('msg', data); // send server our message, the pitch, and the rate\r\n            setInputText('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n    <>\r\n    <Wrapper>\r\n    <form onSubmit={handleSubmit}>\r\n        <StyledInput maxLength=\"32\" autoComplete=\"off\"  type=\"text\" name=\"name\"\r\n        value={inputText} onChange={(e) => setInputText(e.target.value)}>\r\n        </StyledInput>\r\n    </form>\r\n    </Wrapper> \r\n    </>\r\n    )\r\n}\r\n\r\nexport default ChatInput;"]},"metadata":{},"sourceType":"module"}