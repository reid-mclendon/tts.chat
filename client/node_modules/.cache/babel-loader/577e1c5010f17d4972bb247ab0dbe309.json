{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grumb\\\\Documents\\\\aloud\\\\client\\\\src\\\\components\\\\Info.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport socket from '../adapters/socket';\nimport UserCount from './UserCount';\nimport UserList from './UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Info = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [enabled, setEnabled] = useState(false);\n  useEffect(() => {\n    socket.on('userUpdate', users => {\n      if (!enabled) setEnabled(true);\n      setUsers(users);\n    });\n    return () => {\n      socket.off('userUpdate');\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: enabled ?\n    /*#__PURE__*/\n    // If enabled, render UserCount and UserList, if not render nothing\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(UserCount, {\n        users: users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        users: users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n\n_s(Info, \"+o1yiUnE5JSuYlOcM0mFXC7gcws=\");\n\n_c = Info;\nexport default Info;\n\nvar _c;\n\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"sources":["C:/Users/grumb/Documents/aloud/client/src/components/Info.jsx"],"names":["React","useState","useEffect","socket","UserCount","UserList","Info","users","setUsers","enabled","setEnabled","on","off"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,MAAM,CAACQ,EAAP,CAAU,YAAV,EAAwBJ,KAAK,IAAI;AAC7B,UAAG,CAACE,OAAJ,EAAaC,UAAU,CAAC,IAAD,CAAV;AACbF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAHD;AAKA,WAAO,MAAM;AACTJ,MAAAA,MAAM,CAACS,GAAP,CAAW,YAAX;AACH,KAFD;AAGH,GATQ,CAAT;AAWA,sBACA;AAAA,cACKH,OAAO;AAAA;AAAG;AACX;AAAA,8BACA,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADQ,gBAKN;AANN,mBADA;AAWH,CA1BD;;GAAMD,I;;KAAAA,I;AA4BN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport socket from '../adapters/socket';\r\nimport UserCount from './UserCount';\r\nimport UserList from './UserList';\r\n\r\nconst Info = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [enabled, setEnabled] = useState(false);\r\n\r\n    useEffect(() => {\r\n        socket.on('userUpdate', users => {\r\n            if(!enabled) setEnabled(true);\r\n            setUsers(users);\r\n        })\r\n\r\n        return () => {\r\n            socket.off('userUpdate');\r\n        };\r\n    });\r\n\r\n    return ( \r\n    <>\r\n        {enabled ? // If enabled, render UserCount and UserList, if not render nothing\r\n        <>\r\n        <UserCount users={users}/>\r\n        <UserList users={users}/>\r\n        </>\r\n        : <></>\r\n        }\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Info;"]},"metadata":{},"sourceType":"module"}